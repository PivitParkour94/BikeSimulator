:root {
    --cell-height: 3em;
}

body {
    counter-reset: xAxis yAxis;
    counter-increment: xAxis -1;
}

.application {
    height: 100vh;
    width: 100vw;
}

.title {
    text-align: center;
    padding-top: 1em;
    font-size: larger;
    font-weight: bold;
    font-size: x-large;
}

.instructions {
    text-align: center;
    padding: 1em;
}

.board {
    text-align: center;
    margin: 1em;
    background-color: rgb(239, 255, 196);
    padding-bottom: 2em;
}

.input {
    text-align: center;
    float: left;
    width:50%;
}

.command {
    font-family: 'Courier New', Courier, monospace;
    font-size: 2em;
    font-weight: 400;
    color: gray;
    background-color: #4a4a4a;
    width: fit-content;
    margin: auto;
    padding: 0.3em;
    border-radius: 1em;
    position: relative;
    top: 10px;
}

textarea {
    width: 60%;
    height: max-content;
}

.output-box {
    text-align: center;
    border-top: grey 1px dashed;
    padding: 3em;
    width: 100%;
}

.output {
    color:rgb(151, 151, 151);
    font-family:'Courier New', Courier, monospace;
    font-size: 2em;
    font-weight: 400;
}

.output-log {
    float: left;
}

.output-debug {
    float: right;
    text-align: left;
    font-size: 0.5em;
}

.output-log-error {
    float: left;
    color: rgb(255, 52, 52);
}

/* GRID */
table {
    margin: auto;
    table-layout:fixed;
}

td {
    /* display: inline-block; */
    height: var(--cell-height) !important;
    width: var(--cell-height) !important;
    border: black 1px solid;
}

td.x-axis::before {
    counter-increment: xAxis;
    content: counter(xAxis);
    position: relative;
    bottom: calc(-1 * 80%);
}

td.x-end::after {
    counter-increment: xAxis;
    content: counter(xAxis);
    position: relative;
    /* left: calc(1 * 50%); */
    bottom: calc(-1 * 80%);
}


td.y-axis::before {
    content: attr(data-y-axis);
    position: relative;
    left: calc(-1 * 75%);
    /* bottom: calc(-1 * 80%); */
}

